// https://www.stix.id.au/wiki/Fast_8-bit_pseudorandom_number_generator
#include "fxp.h"
#include "go-board.h"
#include "vec3.h"

static uint32_t state = 0;

static _vec3 rand_dir();

_fast static uint32_t random32() {
    state = state * 747796405u + 2891336453u;
    uint32_t word = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
    return (word >> 22u) ^ word;
}

static uint8_t a, b, c, x;
static uint8_t rand8() {
  x++;
  a = (a ^ c) ^ x;
  b = b + a;
  c = (c + ((b >> 1) | (b << 7))) ^ a;
  return c;
}

__attribute__((used, aligned(16), section(".text.lut")))
static const fxp32_t normal_lut[512] = {
    -62923, -79761,  55979,  22345,  -9374,   2284,  51246,  59057,  81485, -32049,  28131, -22578, -32896,  78683, -17270,  48562,  -7643, 107060, -54620,  66103, -50305, -28889,  20409, -99226,   8167,  28064, -59254, -42781, -43874,  35535, 113663, -72771,
     44426,  -6588,  66151, -43036,  -6547, -88331,  -3186, 104028,  75039,  14749,  10226, -31545, -67090,  29921,  -4769, -84248,  86642, -41980, -13462, -118555, -61281, -30148, -29993,   9475, -55208, -123316, -24206, -140286, -21632, -21521,  32393, -38524,
    -60870,  38465,   3260,  42970, -50021,  52046, -103746, -51189,  82174, -55500,  46822, 104345,  10490,  66116,  54585,  34719, -64356, -38845,  77195, 126832, -16314,  58528,  50964,  23508, -29650,  16480,  27718,    858, -159203,  35777, -24831, -19727,
     19956, 104149,  60987,   1928,  25860,  26742, -92719,  27552,  86614, -38249,  67340, -10178,  19122,  53717, -48640, -96918, -38407, 122787, -70408, -20959,  45944,  45884,  15198, -50895, -122590,  23507,  55936, -10954,  24959, -90718,  24381, 119208,
    -18576,  38831, -11271, -40093,  36511,  16687, -32934,  44176, -23920, -57460,  86344,  88160, -124575, -81527,  -6790, -59884,  16547,  -5706,  -1336, 104260, -81747,  37517, -30936, -67478,  51645,  -3926,  62347, -25066,  98882,  94271,  28480, 163952,
    -66306, -55498, -45844,  65874, -42711,  46687,  -9058, -22017,  55784,  21627, -16083,  29092, -46526, -35454, -61598,  71478,  49031, -21635, -19964,  33928, -91163, 162974, -40699, -33594, -44391, -54256, -17513, -96098,  80014,  -1010, -16393,  88060,
    -69471, -86937, -60265,  50519, -55773, -15242, -69073,   8167, 128366,  63762, -14299,  48521, -113994, 156184, -58017,   5305, -35672, -24902,  20410, -13801, -10748, -129726,  29618, -67990, -55763, -30183, -61612, -42170,  48016, -152142,  98318,  17807,
     61280, 160175, -82528, -13787, -83400, -85047, -96763, -58306, -27428,  38529, -60044,  -8547, -93433, -31650, -79946,  81032, -68016, -53585,  -6534,  54722,  43266, -10717,  53506,  29542, -68787,  54009,  45949,  27530, -57773,   2536,  32644, 168629,
    -52260, -181993, -38274, 145923,  37224, 131785,  72204, -102420,   -514, -30956,  20586,   5098, -17463,  23398,  94996,  89936,  -5872, -102964, -14816, -77061,  21406, -37218,  -3133, -20613,  43314,  47459, -120820,  97199,  37067, -74749, -47161,  15465,
     23882, -47446,  69733,  45211, -29513,  11196, -31878,  28107,   3216, -35385, -130852,  22056, -31187, -54561,  -4745,   -705, -49971,  38032, -32276, -108514,  57225,   9601,  -6692,  53159, -25760, -15156,  46937, -60114,   3032, -22540,   4010,  56030,
     -8807, -123164,  86835, -91858, -19968, -49809, -63367, -43973, -19230, -89208, 128576, -105530,  72684,  61282, -136039, 119253, -62991,  45933, -10882, -37195, -21807, -30534,  31006, 118806, -81222, -63189,  84826,  25457,  -8783, -100057,  13142,  18371,
    -50189, -52760, -92024, -17574, -53303, 112637, -47894, 143995,  96715,  -7408, 100052, -43712,  19476, -19135, -16666,  20702,  84233, 153680, -82270, -40506,  57795,  44339,  47313, -79784,  54317, 107158,  43274,  46939, 112575,  42287,  75959, -32810,
    -55063,  26526,  35916,  22977, 106470, -13893,  33643,   2215,  10092,  26104, -26307,  17651,  24631, -61193,  81286, -10231, -31457,  -5523,  -9937, 123312,  35769,  61672,  42090,  54154,  -5241, -43476,  27644, -110449,  54747, 117294,  79757,  66280,
     92696,  28752, -51817, -101750,  -3447, -30641,  36341,   1016, -121318, 112312,  53094, -12784,  90446, -40360,  56878, -106886,  45601,  30534,  37009, -15602,  41236,  25235,  35933,  -6637,  55842,  77114,  16091, -61711, -86586,  73499, 109582,   1311,
     43595,  53690, -60600,  36207,  59184, -97510,   6260,   1641,  40818, -132046, -33164, -26918, -52848,  11964,  -8214,  -8102,  49394,  38769, -16834, -49732, 118544,  47440,  40383, -60633,  44821,  17730, -17646, -60614,  36877,  17614,  15977,   6158,
     23119, -47983, -25729,  -6056,  17555,  -6347, -58229, -46615,   -304,  55327,  20746, -55407, 108537, -18709, -106451,  70836,    440, -78449, -119494,  10555, -61080, 101913, -14471, 139253, -62380,  35055, -20757,  -2444, -30241, -68392,  23427,  49809
};

static _vec3 rand_dir(void) {
    uint32_t r = random32();
    _vec3 v = {
        normal_lut[(r      ) & 0x1FF],
        normal_lut[(r >>  9) & 0x1FF],
        normal_lut[(r >> 18) & 0x1FF]
    };
    return vec3_normalize(v);
}
